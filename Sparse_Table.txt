/*  TAHMID RAHMAN
    DAMIAN FOREVER
     MATH LOVER
    NEVER GIVE UP
*/
#include<bits/stdc++.h>
using namespace std;
#define pi acos(-1.0)
#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define pb push_back
#define fi first
#define se second
#define in insert
#define mp make_pair
#define GCD(a,b) __gcd(a,b);
#define endl "\n"
#define FRU freopen("out.txt","w",stdout)
#define FRO freopen("in.txt","r",stdin)
#define INFLL 9223372036854775807
#define debug 0
#define MAXN   100001
#define ar array
#define lb lower_bound
#define ub upper_bound
const int mxN=2e5;
const int MOD=1e9+7;
template<typename ForwardIterator, typename T>
ForwardIterator first_less_than (ForwardIterator first, ForwardIterator last, T value)
{auto it = std::lower_bound (first, last, value);
return (it == first ? last : --it);}
bool sortbysec(const pair<int,int> &a,const pair<int,int> &b)
{
    return (a.second < b.second);
}
#define debugxx(v) {for(auto x:v){cout<<x.fi<<" "<<x.se<<endl;}cout<<endl;}
#define debugx(v){for(auto y:v) {cout<<y<<" ";}cout<<endl;}
//Don't hesitate to ask me if you don't understand my code.......Happy coding,Tahmid...;
const int MAX_N = 10000005;

int bin_log[MAX_N];

ll n,q;

ll pre[MAX_N][18];


int query(int L, int R) { // O(1)
	int length = R - L + 1;
	int k = bin_log[length];
	return min(pre[L][k], pre[R-(1<<k)+1][k]);
}


int main()
{
    fastio;

    ll i,j,k;
    cin>>n>>q;


    vector<ll>v(n);

    for(i=0;i<n;i++)
    {
        cin>>v[i];
        pre[i][0]=v[i];
    }

    bin_log[1] = 0;

    for(i = 2; i <= n; i++) {
		bin_log[i] = bin_log[i/2]+1;
	}


    for(j=1;j<18;j++)
    {
        for(i=0;i<n-(1<<j)+1;i++)
        {
            pre[i][j]=min(pre[i][j-1],pre[i+(1<<(j-1))][j-1]);
        }
    }





	for(i = 0; i < q; i++) {
		int L, R;
		cin >> L >> R;
		L--;
		R--;
		cout << query(L, R) <<endl;
	}






}

